I was able to decent coverage this time around with this tester compared to my previous assignments. I am able to get about ~68% with 20 games ran in a row where my previous assignments would get 30-40% at best even with hundreds of thousands of runs. Despite being able to test (theoretically) every card in the game my test coverage wasn't quite as high as I thought it was going to be. I think part of this is because there are debugging functions/extra functions that cannot be ran or are not used during a normal play through. One thing that I did see though was that the feast card function is definitely broken as it would cause my tests to hang up every time that card was played.

As far as testing other classmates implementations against mine, I ran into a lot of failures even after picking out a few different repositories. In fact, I was not able to get matching outputs at all. I think a large part of this is because everyone's implementation is very different especially when it comes to what output they choose to write to stdout. In other words, there was no standard regarding output for anyone to adhere to and so diffing the outputs of everyone's programs should almost always result in at least one difference (at least one being a bit of an understatement). Because of this exact reason, it is also very difficult to tell who's test implementation is actually correct because it is all so wildly different. Also, since I noticed even some of the source code has bugs in it, having a "correct" test may actually not even be all that correct if the actual dominion implementation itself does not match up to how Dominion is actually played. Aside from the program output, even the code coverages themselves were different. For example, mine has ~68% with 20 runs, another had nearly 80%, another had ~59%. With the varying outputs and code coverages, it is very difficult to come to a conclusion which tests are "better." Overall, I would say this is not an ideal case to compare different testing suites (at least suites with no standards to adhere to).
